
git add .
git commit -m "text"
git push -u origin main

## **Database Design**

### **1. `users` Collection**
This collection stores information about all users (students and teachers). Since students and teachers share some attributes, we can use a `role` field to differentiate them.

#### **Document Structure**
```json
{
  "_id": "<unique_user_id>",
  "username": "john_doe",
  "email": "johndoe@example.com",
  "acccountId": "
  "role": "student",        // Can be "student" or "teacher"
  "joined_classes": [       // Only applicable for students
    {
      "class_id": "<class_id>",
      "status": "pending"   // Can be "pending" or "approved"
    }
  ],
  "created_classes": [      // Only applicable for teachers
    "<class_id>"
  ]
}
```

### **2. `classes` Collection**
This collection stores all the class-related information, including the teacher who created it, the students who joined, and the attendance records.

classCollectionId
#### **Document Structure**

{
  "class_id": "<unique_class_id>",
  "class_name": "Math 101",
  "created_by": "<teacher_id>",  // Reference to the teacher's user ID
  "class_location" : [
    {
     "latitude": 37.7749,
      "longitude": -122.4194 
    }
  ],
  "class_address" : [
    {"room":"16", "floor":5, "building":"AAB", "street": "5 Baptist University Road"}
  ],
  "class_schedule" : [
    {"Monday":"8-11", "Tuesday":"14-16"}
  ],
  "students": [                 // List of students who joined the class
    {
      "student_id": "<student_id>",
      "status": "approved",      // Can be "approved" or "pending"
      "joined_date": "2024-12-01T08:00:00Z"
    }
  ],
  "attendance_days": [          // Tracks attendance for each day
    { "session_title": "Section 1", //newly added attribute
      "date": "2024-12-28",     // Date of attendance
      "attendance_code": "ABC123", // Code generated for the day
      "location": {                 //longitude for attendance code
        "latitude": 37.7749,
        "longitude": -122.4194
                                },
      "records": [              // Attendance submissions
        {
          "student_id": "<student_id>",
          "name": "John Doe",
          "submission_time": "2024-12-28T10:15:00Z",
          "status": "present"   // "present" if within 50 meters, else "absent"
        }
      ]
    }
  ],
  "class_size": 20, //integer
  "class_image": "url" //url from storage

}

3. filecollection
**Document Structure**
{

  "Document ID" : "_id",
  "filename" : "myfile1",
  "creator" : "6770e2e600094f0b8bf0",
  "class_id" : "67ae43b0001a50feec61",
  "fileURL" : "https://cloud.appwrite.io/v1/storage/buckets/67330bfe001b740c30af/files/67ae2e490006f1d213df/view?project=673308040024ad5f0292"
}

```

#### **Notes:**
- `created_by`: Relates the class to the teacher who created it.
- `location`: The location tied to the class for attendance verification.
- `students`: Tracks students who have joined or requested to join the class.
- `attendance_days`: Stores attendance information for each day, including the code, student submissions, and their status.

---

### **3. `attendance_codes` Collection (Optional)**
This collection stores the attendance codes generated by teachers for specific days. It is useful if you want to decouple attendance codes from the main `classes` collection for easier querying.

#### **Document Structure**
```json
{
  "_id": "<unique_code_id>",
  "class_id": "<class_id>",      // Links to the class
  "date": "2024-12-28",          // Date the code is generated for
  "attendance_code": "ABC123",   // Unique code
  "location": {                  // Location tied to the code
    "latitude": 37.7749,
    "longitude": -122.4194
  },
  "valid_until": "2024-12-28T23:59:59Z" // Expiration time for the code
}

classCollectionId
  "_id": "677138d30025b530a07e",
  "class_id": "677138d30025a8c56eb8",
  "class_name": "Class I",
  "created_by": "6770e2e7001cb9897392",  // Reference to the teacher's user ID
  "students": [                 // List of students who joined the class
     {
      "student_id": "6771428e002454c84ae4",
      "status": "approved",   
      "joined_date": "2024-12-01T08:00:00Z"
    },
 {
      "student_id": "677039c4001a6fb64fea",
      "status": "approved",   
      "joined_date": "2024-11-01T08:00:00Z"
    }

  ],


userCollectionId
  "_id": "6771428e002454c84ae4",
  "username": "John Ce",
  "email": "iou@gmail.com",
  "avatar": "https://example.com/avatar.png",
  "acccountId": "foijo908",
  "role": "student",        
  

  current login user
  "_id": "6770e2e7001cb9897392",
  "username": "Try",
  "email": "try@gmail.com",
  "avatar": "https://example.com/avatar.png",
  "acccountId": "6770e2e600094f0b8bf0",
  "role": "teacher",        // Can be "student" or "teacher"
  "joined_classes": [       // Only applicable for students
    {
      "class_id":"677138d30025b530a07e","status":"pending"
    }
  ],
  

- modify the check-in process. rather than typing the code, create a check-in button so that they don't 
have to enter the code. easier to check-in.

##add report for home page (let the user download their information)
## add get direction to specific location 
## add get duration to the class location 
## let the user upload the image for their class. 

##update location pin color:
##add charts pie, bar 
## sending short note to teacher only if they are in the classroom. 


